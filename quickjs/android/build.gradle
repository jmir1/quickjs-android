apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
  compileSdkVersion rootProject.ext.compileSdkVersion

  defaultConfig {
    minSdkVersion 18

    testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

    ndk {
      abiFilters(*rootProject.ext.ndkAbiFilters)
    }

    externalNativeBuild {
      cmake {
        arguments '-DANDROID_TOOLCHAIN=clang', '-DANDROID_STL=c++_static'
        cFlags '-fstrict-aliasing', "-DCONFIG_VERSION=\\\"${quickJsVersion()}\\\""
        cppFlags '-fstrict-aliasing', "-DCONFIG_VERSION=\\\"${quickJsVersion()}\\\""
      }
    }
  }

  sourceSets {
    main.java.srcDirs += '../common/java/'
    androidTest.java.srcDirs += '../common/test/'
  }

  buildTypes {
    release {
      externalNativeBuild {
        cmake {
          arguments '-DCMAKE_BUILD_TYPE=MinSizeRel'
          cFlags '-g0', '-Os', '-fomit-frame-pointer', '-DNDEBUG', '-fvisibility=hidden'
          cppFlags '-g0', '-Os', '-fomit-frame-pointer', '-DNDEBUG', '-fvisibility=hidden'
        }
      }
    }
    debug {
      externalNativeBuild {
        cmake {
          cFlags '-g', '-DDEBUG', '-DDUMP_LEAKS'
          cppFlags '-g', '-DDEBUG', '-DDUMP_LEAKS'
        }
      }
    }
  }

  externalNativeBuild {
    cmake {
      path "CMakeLists.txt"
    }
  }
}

dependencies {
  api deps.androidx.annotation

  androidTestImplementation deps.androidx.test.runner
  androidTestImplementation deps.truth
}

def quickJsVersion() {
  return new File(projectDir, "../common/native/quickjs/VERSION").text.trim()
}


def getVersionName = { ->
    return "0.9.5"
}

def getGroupId = { ->
    return "com.github.jmir1"
}


task sourceJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

publishing {
    publications {
        bar(MavenPublication) {
            groupId getGroupId()
            version getVersionName()
            artifact("$buildDir/outputs/aar/android-release.aar")
            artifact(tasks["sourceJar"])
        }
    }
}
